(()=>{"use strict";var n={188:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"*{\n    margin: 0;\n    padding: 0;\n\n}\n\n#sudoku{\n    margin-top: 100px;\n}\n.sudoku{\n    position: relative;\n\tmargin-top: 20px;\n\tposition: absolute;\n\tz-index: 5;\n\twidth: 880px;\n\theight:  850px;\n    background-size: contain;\n\n}\n.square{\n    background-color: rgb(133, 232, 232);\n    margin-left: 40px;\n    width: 780px;\n    height: 83px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    border:  2px solid black;\n    \n}\n.boxStyle{\n\n    background-color: rgb(255, 245, 45);\n    font-size: 60px;\n    text-align: center;\n    border:1px solid black;\n    height: 80px;\n    width: 80px;\n    \n}\n\n.mode{\n    position: relative;\n    display: block;\n    left:40%;\n    width:  400px;\n    margin-top: 30px;\n    height: 80px;\n    font-size: 60px;\n    color: aliceblue;\n    text-align: center;   \n    border-radius: 50px;\n}\n.easyMode{\nbackground-color: rgb(8, 255, 8);\n}\n.mediumMode{\nbackground-color: #ffd429;\n}\n.hardMode{\nbackground-color: rgb(184, 16, 16);\n}\n\n","",{version:3,sources:["webpack://./src/components/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;;AAEd;;AAEA;IACI,iBAAiB;AACrB;AACA;IACI,kBAAkB;CACrB,gBAAgB;CAChB,kBAAkB;CAClB,UAAU;CACV,YAAY;CACZ,cAAc;IACX,wBAAwB;;AAE5B;AACA;IACI,oCAAoC;IACpC,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,eAAe;IACf,8BAA8B;IAC9B,wBAAwB;;AAE5B;AACA;;IAEI,mCAAmC;IACnC,eAAe;IACf,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;IACZ,WAAW;;AAEf;;AAEA;IACI,kBAAkB;IAClB,cAAc;IACd,QAAQ;IACR,aAAa;IACb,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,mBAAmB;AACvB;AACA;AACA,gCAAgC;AAChC;AACA;AACA,yBAAyB;AACzB;AACA;AACA,kCAAkC;AAClC",sourcesContent:["*{\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n}\r\n\r\n#sudoku{\r\n    margin-top: 100px;\r\n}\r\n.sudoku{\r\n    position: relative;\r\n\tmargin-top: 20px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\twidth: 880px;\r\n\theight:  850px;\r\n    background-size: contain;\r\n\r\n}\r\n.square{\r\n    background-color: rgb(133, 232, 232);\r\n    margin-left: 40px;\r\n    width: 780px;\r\n    height: 83px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    border:  2px solid black;\r\n    \r\n}\r\n.boxStyle{\r\n\r\n    background-color: rgb(255, 245, 45);\r\n    font-size: 60px;\r\n    text-align: center;\r\n    border:1px solid black;\r\n    height: 80px;\r\n    width: 80px;\r\n    \r\n}\r\n\r\n.mode{\r\n    position: relative;\r\n    display: block;\r\n    left:40%;\r\n    width:  400px;\r\n    margin-top: 30px;\r\n    height: 80px;\r\n    font-size: 60px;\r\n    color: aliceblue;\r\n    text-align: center;   \r\n    border-radius: 50px;\r\n}\r\n.easyMode{\r\nbackground-color: rgb(8, 255, 8);\r\n}\r\n.mediumMode{\r\nbackground-color: #ffd429;\r\n}\r\n.hardMode{\r\nbackground-color: rgb(184, 16, 16);\r\n}\r\n\r\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],l=r.base?s[0]+r.base:s[0],d=a[l]||0,u="".concat(l," ").concat(d);a[l]=d+1;var A=t(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var f=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:u,updater:f,references:1})}i.push(u)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=r(n,o),l=0;l<a.length;l++){var d=t(a[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{function n(n,e={},...t){const r=document.createElement(n);return Object.keys(e).forEach((n=>{r.setAttribute(n,e[n])})),t.forEach((n=>{r.append(n)})),r}function e(n,t,o){if(9===o&&(o=0,9==++t))return!0;const a=[1,2,3,4,5,6,7,8,9];!function(n){for(let e=n.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[n[e],n[t]]=[n[t],n[e]]}}(a);for(let i=0;i<9;i++){const c=a[i];if(r(n,t,o,c)){if(n[t][o]=c,e(n,t,o+1))return!0;n[t][o]=0}}return!1}function r(n,e,t,r){for(let t=0;t<9;t++)if(n[e][t]===r)return!1;for(let e=0;e<9;e++)if(n[e][t]===r)return!1;const o=3*Math.floor(e/3),a=3*Math.floor(t/3);for(let e=o;e<o+3;e++)for(let t=a;t<a+3;t++)if(n[e][t]===r)return!1;return!0}const o=function(){const n=[];for(let e=0;e<9;e++){n[e]=[];for(let t=0;t<9;t++)n[e][t]=0}return e(n,0,0),n}();let a=[[],[],[],[],[],[],[],[],[]],i=0,c=function(n,e){if(!e){const e=Math.ceil(10*Math.random()+n);let t=0;n:for(let n=0;t<e;n++){9===n&&(n=0);let r=o[n];for(let o=0;t<e;o++)if(Math.random()>.85&&Math.random()<.88&&0!==r[o]&&(a[n][o]=r[o],r[o]=0,t++,i=t),8===o)continue n}}return console.log(a),o};function s({value:e}){const t=n("input",{type:"text",class:"boxStyle manualWrite "});let r=n("div",{class:"boxStyle  defaultWrite"},e);return e?r:t}function l(e,t){const r=n("section",{id:"sudoku"});root.appendChild(r),root.removeChild(S);const o=new c(e,t);for(let e=0;e<9;e++){const t=n("div",{class:"square",id:"square"+e});r.appendChild(t);for(let n=0;n<9;n++)t.appendChild(s({value:o[e][n]})).classList.add(e+""+n);r.appendChild(t)}const l=document.querySelectorAll(".manualWrite");let d=0,u=0;return l.forEach((n=>{n.addEventListener("keyup",(e=>{let t=n.className[21],r=n.className[22];e.target.value==a[t][r]?(u++,u==i&&GameEnd("win"),console.log("YEEEEEES")):(d++,console.log("NOOOOO"),3==d&&closeGameIf3Mistakes())}))})),r}var d=t(379),u=t.n(d),A=t(795),p=t.n(A),f=t(569),h=t.n(f),m=t(565),C=t.n(m),g=t(216),b=t.n(g),v=t(589),x=t.n(v),y=t(188),B={};B.styleTagTransform=x(),B.setAttributes=C(),B.insert=h().bind(null,"head"),B.domAPI=p(),B.insertStyleElement=b(),u()(y.Z,B),y.Z&&y.Z.locals&&y.Z.locals;let I=!1,k=!1;const E=n("button",{class:"easyMode mode"},"Easy"),w=n("button",{class:"mediumMode mode"},"Medium"),M=n("button",{class:"hardMode mode"},"Hard"),S=n("div",{class:"modes"},E,w,M);E.addEventListener("click",(()=>{I||(I=!0,l(15,k))})),w.addEventListener("click",(()=>{I||l(35,k)})),M.addEventListener("click",(()=>{I||l(55,k)})),document.getElementById("root").appendChild(S)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,